#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.hibernate.show-sql=true
#spring.datasource.url=${postgresurl}
#spring.datasource.username=${postgres_user}
#spring.datasource.password=${postgres_pwd}
#server.port=8091
#server.servlet.contextPath=/zen-pack
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.datasource.url=${postgresurl}
spring.datasource.username=${postgres_user}
spring.datasource.password=${postgres_pwd}
#server.port=8091
spring.datasource.hikari.connectionTimeout=30000 
spring.datasource.hikari.idleTimeout=600000 
spring.datasource.hikari.maxLifetime=1800000 
#Remove this after table structure is set
spring.jpa.hibernate.ddl-auto=create-drop

# logging level
logging.level.org.springframework.web=debug
logging.level.org.hibernate=error

# output to a file
logging.file=app.log

spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER



spring.http.converters.preferred-json-mapper=gson
